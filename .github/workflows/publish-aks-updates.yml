# .github/workflows/publish-aks-updates.yml
name: Publish AKS updates to WordPress (PowerShell)

on:
  schedule:
    - cron: '0 */6 * * *'   # Every 6 hours for page updates
    - cron: '0 9 * * 0'     # Sunday 09:00 UTC for weekly digest
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: PowerShell 7 is preinstalled
        run: pwsh -v

      - name: Generate HTML JSON (content + hash)
        id: gen
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OpenAIKey: ${{ secrets.OPENAI_API_KEY }}
          AZURE_OPENAI_APIURI:       ${{ secrets.AZURE_OPENAI_APIURI }}
          AZURE_OPENAI_KEY:          ${{ secrets.AZURE_OPENAI_KEY }}
          AZURE_OPENAI_API_VERSION:  ${{ secrets.AZURE_OPENAI_API_VERSION }}
          AZURE_OPENAI_DEPLOYMENT:   ${{ secrets.AZURE_OPENAI_DEPLOYMENT }}
        run: |
          ./.github/scripts/generate-aks-updates.ps1 1> out.json
          Write-Host "Generated out.json ($((Get-Item out.json).Length) bytes)"
          $json = Get-Content out.json -Raw | ConvertFrom-Json
          Set-Content -LiteralPath content.html -Value $json.html -Encoding UTF8
          Set-Content -LiteralPath digest.html -Value $json.digest_html -Encoding UTF8
          Set-Content -LiteralPath digest.title -Value $json.digest_title -Encoding UTF8
          Add-Content -Path $env:GITHUB_OUTPUT -Value "hash=$($json.hash)"

      - name: Get current WP page
        id: get
        run: |
          curl -sS -u "${{ secrets.WP_USER }}:${{ secrets.WP_APP_PASSWORD }}" \
            "${{ secrets.WP_URL }}/wp-json/wp/v2/pages/${{ secrets.WP_PAGE_ID }}" > page.json
          echo "current=$(jq -r .content.rendered page.json | sha256sum | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: Skip if no changes
        if: ${{ steps.gen.outputs.hash == steps.get.outputs.current }}
        run: echo "No content changes — skipping WordPress update."

      - name: Update WordPress page
        if: ${{ steps.gen.outputs.hash != steps.get.outputs.current }}
        run: |
          WP_API="${{ secrets.WP_URL }}/wp-json/wp/v2/pages/${{ secrets.WP_PAGE_ID }}"
          jq -n --rawfile content content.html \
            '{content: "<!-- wp:html -->\n\($content)\n<!-- /wp:html -->", status: "publish"}' \
            > "$RUNNER_TEMP/wp-payload.json"
          curl -sSf -X POST "$WP_API" \
            -u "${{ secrets.WP_USER }}:${{ secrets.WP_APP_PASSWORD }}" \
            -H "Content-Type: application/json" \
            --data-binary @"$RUNNER_TEMP/wp-payload.json"

      - name: Create weekly WP post (runs only at Sunday 09:00 UTC)
        if: github.event.schedule == '0 9 * * 0'
        run: |
          if [ ! -s digest.html ]; then
            echo "No digest content — skipping weekly post."
            exit 0
          fi

          WP_API="${{ secrets.WP_URL }}/wp-json/wp/v2/posts"
          TITLE=$(cat digest.title)

          jq -n --rawfile content digest.html --arg title "$TITLE" \
            '{title: $title,
              status: "publish",
              categories: [261],
              content: "<!-- wp:html -->\n\($content)\n<!-- /wp:html -->",
              comment_status: "closed"}' \
            > "$RUNNER_TEMP/wp-weekly.json"

          curl -sSf -X POST "$WP_API" \
            -u "${{ secrets.WP_USER }}:${{ secrets.WP_APP_PASSWORD }}" \
            -H "Content-Type: application/json" \
            --data-binary @"$RUNNER_TEMP/wp-weekly.json"
