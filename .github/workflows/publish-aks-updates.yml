# .github/workflows/publish-aks-updates.yml
name: Publish AKS updates to WordPress (PowerShell)

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: PowerShell 7 is preinstalled
        run: pwsh -v

      - name: Generate HTML JSON (content + hash)
        id: gen
        shell: pwsh
        run: |
          # Run script; redirect only stdout (success stream) to out.json
          ./.github/scripts/generate-aks-updates.ps1 1> out.json

          # Show live confirmation + size in the log
          Write-Host "Generated out.json ($((Get-Item out.json).Length) bytes)"

          # Parse JSON
          $json = Get-Content out.json -Raw | ConvertFrom-Json

          # Save big HTML to a file (DO NOT put in GITHUB_OUTPUT)
          Set-Content -LiteralPath content.html -Value $json.html -Encoding UTF8

          # Only output the small hash as a step output
          Add-Content -Path $env:GITHUB_OUTPUT -Value "hash=$($json.hash)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OpenAIKey: ${{ secrets.OPENAI_API_KEY }}
          AZURE_OPENAI_APIURI:       ${{ secrets.AZURE_OPENAI_APIURI }}
          AZURE_OPENAI_KEY:          ${{ secrets.AZURE_OPENAI_KEY }}
          AZURE_OPENAI_API_VERSION:  ${{ secrets.AZURE_OPENAI_API_VERSION }}
          AZURE_OPENAI_DEPLOYMENT:   ${{ secrets.AZURE_OPENAI_DEPLOYMENT }}

      - name: Get current WP page
        id: get
        run: |
          curl -sS -u "${{ secrets.WP_USER }}:${{ secrets.WP_APP_PASSWORD }}" \
            "${{ secrets.WP_URL }}/wp-json/wp/v2/pages/${{ secrets.WP_PAGE_ID }}" > page.json
          echo "current=$(jq -r .content.rendered page.json | sha256sum | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: Skip if no changes
        if: ${{ steps.gen.outputs.hash == steps.get.outputs.current }}
        run: echo "No content changes â€” skipping WordPress update."

      - name: Update WordPress page
        if: ${{ steps.gen.outputs.hash != steps.get.outputs.current }}
        run: |
          WP_API="${{ secrets.WP_URL }}/wp-json/wp/v2/pages/${{ secrets.WP_PAGE_ID }}"

          # Build JSON safely from file (no giant inline strings)
          jq -n --rawfile content content.html \
            '{content: "<!-- wp:html -->\n\($content)\n<!-- /wp:html -->", status: "publish"}' \
            > "$RUNNER_TEMP/wp-payload.json"

          # Send payload from file to avoid argv limits
          curl -sSf -X POST "$WP_API" \
            -u "${{ secrets.WP_USER }}:${{ secrets.WP_APP_PASSWORD }}" \
            -H "Content-Type: application/json" \
            --data-binary @"$RUNNER_TEMP/wp-payload.json"
